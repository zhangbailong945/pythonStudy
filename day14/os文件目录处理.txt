OS 文件目录方法
1.os.access(path,mode) 检验权限模式
2.os.chadir(path) 改变当前的工作目录
3.os.chflags(path,flags) 设置路径的标记为数字标记。
4.os.chmod(path,mode)  更改权限
5.os.chown(path,uid,gid) 更文件所有者
6.os.chroot(paht) 改变当前进程的根目录
7.os.close(fd)  关闭文件描述符fd
8.os.dup(fd) 赋值文件描述符fd
9.os.dup2(fd,fd2) 将一个文件描述符fd复制到另一个fd2
10.os.fchdir(fd) 通过文件描述符改变当前目录
11.os.fchmod(fd,mode) 改变一个文件的访问权限，该文件参数fd指定，参数mode是unix下的文件访问权限。
12.os.closerange(fd_low,fd_height) 关闭所有文件描述符，从fd_low到fd_high（不包含）,错误会忽略
13.os.fcown(fd,uid,gid) 修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件有文件描述符fd指定
14.os.fdatasync(fd) 强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息
15.os.fdopen(fd,[mode[bufsize]]) 通过文件描述符fd创建一个文件对象，并返回这个文件对象
16.os.fpathconf(fd,name) 返回一个打开的文件系统配置信息。name为检索的系统配置的值，它也许是一个定义系统的字符串，这些名字在很多标准中指定。
17.os.fsat(fd)  返回文件描述符fd的状态
18.os.fstatvfs(fd) 返回包含文件描述符fd的文件的文件系统的信息
19.os.fsync(fd) 强制将文件描述符的文件写入硬盘
20.os.getcwd() 返回当前工作目录
21.os.ftruncate(fd,length) 裁剪文件描述符fd对应的文件，所以它最大不能超过文件大小。
22.os.getcwdu() 返回一个当前工作目录的unicode对象
23.os.isatty(fd) 如果文件描述符fd是打开的，同时与tty设备相连，则返回true,否则返回false.
24.os.lchflags(path,flags) 设置路径的标记为数字标记，类似chflags(),但是没有软连接
25.os.lchmod(path,mode) 修改连接文件权限
26.os.lchown(path,uid,gid) 更改文件所有者，类似chown，但是不追踪链接
27.os.link(src,dst) 创建赢连接，名为参数dst,指向参数src
28.os.listdir(path) 返回path指定的文件夹包的文件或文件夹的名字列表
29.os.lseek(fd,pos,how) 设置文件描述符fd当前位置为pos,how方式修改：seek_set或者0设置从文件开始的计算的pos.SEEK_CUR或者1则从当前位置计算；os.SEEK_END或2则文件尾部开始。
30.os.lstat(path) 想stat()，但是没有软连接
31.os.major(device) 从原始的设备中提取设备major号码
32.os.makedev(major,minor) 以major和minor设备号组成一个原始设备号
33.os.minor(device) 从原始的设备中提取设备minor号码
34.os.makedirs(path[mode] 递归文件夹创建函数。
35.os.mkdir(path,mode) 以数字mode的mode创建一个为path的文件夹，默认的mode是0777（八进制）.
36.os.mkfifo(path,mode) 创建命名管道，mode为数字，默认为0666.
37.os.mknod(filename,mode=0666,device) 创建一个名为filename文件系统节点
38.os.open(file,flags[mode]) 打开一个文件，并且设置需要的打开选项，mode参数是可选的
39.os.openty() 打开一个新的伪终端对。返回pty和tty的文件描述符。
40.os.pathconf(path,name) 返回相关文件的系统配置信息
41.os.pipe() 创建一个管道，返回一对文件描述符（r,w）分别为读和谐
42.os.popen(command[model,bufsize]) 从一个command打开一个管道
43.os.read(fd,n) 从文件描述符fd中读取最多n个字节，返回包含读取字节的字符串
44.os.readlink(path) 返回软链接所指向的文件
45.os.remove(path) 删除路径为path的文件。如果path是一个文件夹，将抛出OSError。
46.os.removeidrs(path) 递归删除目录。
47.os.rename(src,dst) 重命名文件或目录，从src到dst
48.os.rmdir(path) 删除path指定的空目录，如果目录非空，则抛出一个OSError
49.os.renames(path) 递归地对目录进行更名，也可以对文件进行更名。
50.os.stat(path) 获取path指定的路径信息，功能等同于C API中的stat()系统调用
51.os.stat_float_times9(newvalue) 决定stat_result是否以float对象显示时间戳
52.os.statvfs(path) 获取指定路径的文件系统统计信息
53.os.symlink(src,dst) 创建一个软连接
54.os.tcgetpgrpfd() 返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组
55.os.tcsetpgrp(fd,pg) 设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg.
56.os.ttyname(fd) 返回一个字符串，它表示与文件描述符fd关联的终端设备。如果fd没有与终端设备关联，则引发一个异常。
57.os.unlink(path) 删除文件路径
58.os.utime(path,times) 返回指定的path文件的访问和修改的时间 
59.os.walk(top[topdown=true,onerror=None,flllowlinks=false]) 输出在文件夹中的文件名通过在树中游走，向上或向下
60.os.write(fd,str) 写入字符串到文件描述符fd中，返回实际写入的字符串长度
